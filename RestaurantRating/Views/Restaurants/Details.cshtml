@model RestaurantRating.Models.Restaurant

@{
    ViewData["Title"] = "Details";
    var currenrUserId = Context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Sid)?.Value;
}

<h1>Details</h1>

<div>
    <h4>Restaurant</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PriceLevel)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PriceLevel)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
    </dl>
</div>

<div>
    @*<a asp-action="Edit" asp-route-id="@Model.Id" class="btn">Edit Restaurant</a> |*@
    <a asp-action="Index" class="btn">Back to List</a>
</div>
<hr />
<h4>Reviews</h4>
<div style="max-height:400px; overflow:auto;">
    <table class="table sortable">
        <thead>
            <tr>
                <th>
                    User name
                </th>
                <th>
                    Review
                </th>
                <th>
                    Rating
                </th>
                <th>
                    Review date
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="reviewsBody">
            @*@foreach (var item in Model.Reviews)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.Username)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Content)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stars)/5
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }*@
        </tbody>
    </table>
</div>
<hr />
@* //Add Review *@
<div>
    <h4>Add Review</h4>
    <div>
        <textarea class="form-control" id="addReviewContent" maxlength="100" placeholder="Tell us what you think"></textarea>
        <b><span class="text-danger" id="contentMessage">This field is required</span></b>
    </div>
    <br />
    <div>
        <select class="form-control" id="addReviewStars">
            <option value="" disabled selected>Rating (From 1 to 5)</option>
            <option value="5">5 Excellent</option>
            <option value="4">4 Above Average</option>
            <option value="3">3 Average</option>
            <option value="2">2 Below Average</option>
            <option value="1">1 Poor</option>
        </select>
        <b><span class="text-danger" id="ratingMessage">This field is required</span></b>
    </div>
    <br />
    <div>
        <input type="submit" value="Submit Review" class="btn" id="addReview" />
    </div>
</div>
<br />

<script>
    $(document).ready(() => {
        var contentMessage = document.getElementById('contentMessage');
        contentMessage.hidden = true;
        var ratingMessage = document.getElementById('ratingMessage');
        ratingMessage.hidden = true;
        var reviewsBody = document.getElementById('reviewsBody');
        //var temp = [
        //    { "id": 3, "content": "Very good", "stars": 5, "date": "2020-10-16T00:00:00", "userId": 2, "user": null, "restaurantId": 2, "restaurant": null },
        //    { "id": 4, "content": "Aaa", "stars": 3, "date": "2020-10-31T00:00:00", "userId": 3, "user": null, "restaurantId": 2, "restaurant": null },
        //];

        buildTable();

        function createNewReview() {

            $.post({
            url: "/Reviews/create",
                data: {
                Content: $('#addReviewContent').val(),
                    Stars: $('#addReviewStars').val(),
                    UserId: "@currenrUserId",
                    RestaurantId: location.href.substr(location.href.lastIndexOf('/') + 1)
                }
            }).done(function () {
                buildTable();
                document.getElementById("addReviewContent").value = "";
                document.getElementById("addReviewStars").value = "";
                contentMessage.hidden = true;
                ratingMessage.hidden = true;
            });
        };

        $('#addReview').click(function () {
            contentMessage.hidden = true;
            ratingMessage.hidden = true;
            if ((!(document.getElementById("addReviewContent") && document.getElementById("addReviewContent").value))
                || (!(document.getElementById("addReviewStars") && document.getElementById("addReviewStars").value))) {
                if ((!(document.getElementById("addReviewContent") && document.getElementById("addReviewContent").value))
                    && (!(document.getElementById("addReviewStars") && document.getElementById("addReviewStars").value))) {
                    contentMessage.hidden = false;
                    ratingMessage.hidden = false;
                }
                else if (!(document.getElementById("addReviewStars") && document.getElementById("addReviewStars").value)) {
                    ratingMessage.hidden = false;
                }
                else {
                    contentMessage.hidden = false;
                }
            }
            else {
                createNewReview();
            }
        });

        function buildTable() {
            $.ajax({
                url: "/Reviews/IndexOfRestaurant/" + location.href.substr(location.href.lastIndexOf('/') + 1),
                success: function (result) {
                    var deleteBtns = document.getElementsByClassName('reviewDelete');
                    var editBtns = document.getElementsByClassName('reviewEdit');
                    reviewsBody.innerHTML = "";
                    for (var i = 0; i < result.length; i++) {
                        var starsHtml = "";
                        var editAndDeleteHtml = "";
                        var editReviewHtml = "";
                        var currReviewId = (result[i].id).toString();
                        var currReviewContent = result[i].content;
                        var currReviewStars = result[i].stars;
                        if (result[i].userId == "@currenrUserId") {

                            editAndDeleteHtml =
                            "<input type='submit' value='Edit' class='btn reviewEdit' id='reviewEdit" + currReviewId + "'/> | " +
                            "<input type='submit' value='Delete' class='btn reviewDelete' id='reviewDelete" +currReviewId + "'/>" +
                            "<div hidden class='deleteDiv' id='deleteDiv" + currReviewId + "'><br/>" +
                            "<b><span class='text-danger'>Are you sure yow want <br/> to delete this comment ? </span></b><br/>" +
                            "<input type='submit' value='Yes' class='btn yesDeleteReview'/>" +
                            " | <input type='submit' value='No' class='btn noDeleteReview'/></div>";

                            editReviewHtml =
                            "<br/><div hidden class='editDiv' id='editDiv" + currReviewId + "'><h4>Edit Review</h4>" +
                            "<div><textarea class='form-control' id='editContent" + currReviewId + "' maxlength='100' value='" + currReviewContent +
                            "' placeholder='" + currReviewContent + "' ></textarea ></div><br/>" +
                            "<div> <select class='form-control' id='editStars" + currReviewId + "'>" +
                            "<option value=" + currReviewStars + " disabled selected>" + currReviewStars +
                            "</option><option value='5'>5 Excellent</option>" +
                            "<option value='4'>4 Above Average</option><option value='3'>3 Average</option>" +
                            "<option value='2'>2 Below Average</option><option value='1'>1 Poor</option></select></div><br/>" +
                            "<div><input type='submit' value='Submit Edited Review' class='btn editReview' id='editReview" + currReviewId + "'/></div></div>";
                        };

                        const fullStar = "<i class='material-icons'>star</i>";
                        const emptyStar = "<i class='material-icons'>star_border</i>";

                        var starsHtml = fullStar.repeat(result[i].stars) + emptyStar.repeat(5 - result[i].stars);
                        
                        reviewsBody.innerHTML = reviewsBody.innerHTML + "<tr><td>" + result[i].user.username +
                            "</td><td>" + result[i].content +
                            "</td><td>" + starsHtml +
                            "</td><td>" + (result[i].date).toString().slice(0, 10) +
                            "</td><td>" + editAndDeleteHtml +
                            "</td><td>" + editReviewHtml + "</td></tr>";

                    };

                    $('.reviewEdit').click(function () {
                        for (var i = 0; i < editBtns.length; i++) {
                            deleteBtns[i].disabled = true;
                            editBtns[i].disabled = true;
                        };
                        currReviewId = (this.id).toString().slice(10, 14);
                        var editDivId = "editDiv" + currReviewId;
                        var editDiv = document.getElementById(editDivId);
                        editDiv.hidden = false;

                        $('.editReview').click(function () {
                            currReviewId = (this.id).toString().slice(10, 14);
                            var editReviewContentId = "editContent" + currReviewId;
                            var editReviewContent = (document.getElementById(editReviewContentId)).value;
                            var editReviewCStarsId = "editStars" + currReviewId;
                            var editReviewCStars = (document.getElementById(editReviewCStarsId)).value;
                            if (editReviewContent == "") {
                                for (var i = 0; i < result.length; i++) {
                                    if (currReviewId == result[i].id) {
                                        editReviewContent = result[i].content;
                                    };
                                };
                            };

                            $.post({
                                url: "/Reviews/Edit/" + currReviewId,
                                data: {
                                    Id: currReviewId,
                                    Content: editReviewContent,
                                    Stars: editReviewCStars,
                                    UserId: "@currenrUserId",
                                    RestaurantId: location.href.substr(location.href.lastIndexOf('/') + 1)
                                }
                            }).done(function () {
                                editDiv.hidden = true;
                                for (var i = 0; i < editBtns.length; i++) {
                                    deleteBtns[i].disabled = false;
                                    editBtns[i].disabled = false;
                                };
                                buildTable();
                            });
                        });
                    });

                    $('.reviewDelete').click(function () {
                        var deleteBtns = document.getElementsByClassName('reviewDelete');
                        var editBtns = document.getElementsByClassName('reviewEdit');
                        for (var i = 0; i < editBtns.length; i++) {
                            deleteBtns[i].disabled = true;
                            editBtns[i].disabled = true;
                        };
                        currReviewId = (this.id).toString().slice(12, 16);
                        var deleteDivId = "deleteDiv" + currReviewId;
                        var deleteDiv = document.getElementById(deleteDivId);
                        deleteDiv.hidden = false;

                        $('.noDeleteReview').click(function () {
                            deleteDiv.hidden = true;
                            for (var i = 0; i < deleteBtns.length; i++) {
                                deleteBtns[i].disabled = false;
                                editBtns[i].disabled = false;
                            };
                        });

                        $('.yesDeleteReview').click(function () {
                            $.post({
                                url: "/Reviews/Delete/" + currReviewId,
                                data: {
                                    id: currReviewId
                                }
                            }).done(function () {
                                buildTable();
                                //document.getElementById("addReviewContent").value = "";
                                //document.getElementById("addReviewStars").value = "";
                                //contentMessage.hidden = true;
                                //ratingMessage.hidden = true;
                            });
                        });

                    });
                }
            });
        };

    });
</script>
