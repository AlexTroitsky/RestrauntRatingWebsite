@model RestaurantRating.Models.Restaurant

@{
    ViewData["Title"] = "Details";
    Boolean isLoggedIn = Context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role)?.Value != null;
    Boolean isManager = isLoggedIn && Context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role).Value.Equals(UserType.Admin.ToString());
    var currentUserId = Context.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Sid)?.Value;
}

<h1>Details</h1>

<div>
    <br />
    <br />
    <table class="table">
        <tr>
            <td style="text-align:center;" colspan="2">
                <h1>@Html.DisplayFor(model => model.Name)</h1>
            </td>
        </tr>
        <tr>

            <td rowspan="2" style="text-align: center;">
                @{
                    String src = (Model.Image == null) ? "../../images/Logo.png" : "data:image / png; base64," + Convert.ToBase64String(Model.Image);
                }


                <img height="500" src="@src" runat="server"/>
            </td>
            <td>
                <b>@Html.DisplayFor(model => model.Description)</b>
                <br /><br />
                <div id="averageStars">

                </div>
                <br />
                <div id="averagePrice">

                </div>
            </td>
        </tr>
        <tr>
            <td>
                <br />
                @Html.DisplayFor(model => model.Address)
                @Html.DisplayFor(model => model.City)
                <br /><br />
                <section id="map">
                    <div class="map-wrapper">
                        <div class="map-canvas" id="map-canvas" style="align-content:center; height: 300px; width: 500px;"></div>
                    </div>
                </section>
            </td>
        </tr>
    </table>
</div>

<hr />

@* //Reviews *@
<table>
    <tr>
        <td>
            <h4>Reviews</h4>
        </td>
        <td>
        </td>
    </tr>
    <tr>
        <td>
            <div style="width:600px; max-height:400px; overflow:auto; background-color:white;">
                <table class="table" id="reviewsBody">
                </table>
            </div>
        </td>
        <td>
            @* //Add Review *@
            <div id="addReviewDiv" hidden>
                <h4 style="text-align:center;">Add Review</h4>

                <div>
                    <textarea class="form-control" style="resize:none;" rows="4" id="addReviewContent" maxlength="100" placeholder="Tell us what you think"></textarea>
                    <b><span class="text-danger" id="contentMessage">Content field is required</span></b>
                    <br />
                    <select class="form-control" id="addReviewStars">
                        <option value="" disabled selected>Rating (From 1 to 5)</option>
                        <option value="5">5 Excellent</option>
                        <option value="4">4 Above Average</option>
                        <option value="3">3 Average</option>
                        <option value="2">2 Below Average</option>
                        <option value="1">1 Poor</option>
                    </select>
                    <b><span class="text-danger" id="starsMessage">Rating field is required</span></b>
                    <br />
                    <select class="form-control" id="addReviewPrice">
                        <option value="" disabled selected>Price Level (From 1 to 5)</option>
                        <option value="5">5 Too Expensive</option>
                        <option value="4">4 Pretty Expensive</option>
                        <option value="3">3 Average</option>
                        <option value="2">2 Pretty Cheap</option>
                        <option value="1">1 Very Cheap</option>
                    </select>
                    <b><span class="text-danger" id="priceMessage">Price level field is required</span></b>
                </div>
                <br />
                <div style="text-align: center;">
                    <input type="submit" value="Submit Review" class="btn" id="addReview" />
                </div>
            </div>
            @if (isLoggedIn)
            {
                <script>
                    var addReviewDiv = document.getElementById('addReviewDiv');
                    addReviewDiv.hidden = false;
                </script>
            }
        </td>
    </tr>
</table>

<script type="text/javascript" defer>
    var title = @Html.Raw(Json.Serialize(@Model.Name));
    var lon = @Html.Raw(Json.Serialize(@Model.Lon));
    var lat = @Html.Raw(Json.Serialize(@Model.Lat));
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNKZSvcXEelSKurf1mbBtwpHjqSpq7P2w"
        defer></script>
<script src="~/js/restaurant-map.js" defer></script>

<script>
    $(document).ready(() => {
        var contentMessage = document.getElementById('contentMessage');
        contentMessage.hidden = true;
        var starsMessage = document.getElementById('starsMessage');
        starsMessage.hidden = true;
        var priceMessage = document.getElementById('priceMessage');
        priceMessage.hidden = true;

        updateRatingAndPriceLevel();

        var reviewsBody = document.getElementById('reviewsBody');

        function updateRatingAndPriceLevel() {
            $.ajax({
                url: "/Reviews/ReviewsOfRestaurant/" + location.href.substr(location.href.lastIndexOf('/') + 1),
                success: function (data) {
                    var jsonOfReviews = JSON.stringify(data);
                    jsonOfReviews = JSON.parse(jsonOfReviews);
                    var reviewsCount = 0;
                    var starsSum = 0;
                    var starsAverage;
                    var priceLevelSum = 0;
                    var priceLevelAverage;

                    for (var i = 0; i < jsonOfReviews.length; i++) {
                        reviewsCount++;
                        starsSum += jsonOfReviews[i].stars;
                        priceLevelSum += jsonOfReviews[i].price;
                    };
                    starsAverage = Math.round(starsSum / reviewsCount);
                    priceLevelAverage = Math.round(priceLevelSum / reviewsCount);

                    $.post({
                        url: "/Restaurants/UpdateRestaurant",
                        data: {
                            restaurantId: @Html.DisplayFor(model => model.Id),
                            rating: starsAverage,
                            priceLevel: priceLevelAverage
                        }
                    }).done(function () {
                        var starsAverage = Math.round(@Html.DisplayFor(model => model.Rating));
                        var starsAverageHtml = drawStars(starsAverage);
                        (document.getElementById('averageStars')).innerHTML = starsAverageHtml;

                        var priceAverage = Math.round(@Html.DisplayFor(model => model.PriceLevel));
                        var priceAverageHtml = drawPrice(priceAverage);
                        (document.getElementById('averagePrice')).innerHTML = priceAverageHtml;
                    });
                }
            });
        };

        function drawStars(stars) {
            var starsHtml = "";
            for (var i = 0; i < stars; i++) {
                starsHtml += "<i class='material-icons'>star</i>";
            };
            for (var i = 0; i < (5 - stars); i++) {
                starsHtml += "<i class='material-icons'>star_border</i>";
            };
            return (starsHtml);
        };

        function drawPrice(priceLevel) {
            var priceLevelHtml = "";
            for (var i = 0; i < priceLevel; i++) {
                priceLevelHtml += "<i class='material-icons'>$</i>";
            };
            return (priceLevelHtml);
        };

        function createNewReview() {
            $.post({
            url: "/Reviews/create",
                data: {
                    Content: $('#addReviewContent').val(),
                    Stars: $('#addReviewStars').val(),
                    Price: $('#addReviewPrice').val(),
                    UserId: "@currentUserId",
                    RestaurantId: location.href.substr(location.href.lastIndexOf('/') + 1)
                }
            }).done(function () {
                updateRatingAndPriceLevel();
                buildTable();
                document.getElementById("addReviewContent").value = "";
                document.getElementById("addReviewStars").value = "";
                document.getElementById("addReviewPrice").value = "";
                contentMessage.hidden = true;
                starsMessage.hidden = true;
                priceMessage.hidden = true;

            });
        };

        $('#addReview').click(function () {
            contentMessage.hidden = true;
            starsMessage.hidden = true;
            priceMessage.hidden = true;

            if ((!(document.getElementById("addReviewContent") && document.getElementById("addReviewContent").value))
                || (!(document.getElementById("addReviewStars") && document.getElementById("addReviewStars").value))
                || (!(document.getElementById("addReviewPrice") && document.getElementById("addReviewPrice").value))) {

                if (!(document.getElementById("addReviewContent") && document.getElementById("addReviewContent").value)) {
                    contentMessage.hidden = false;
                }
                if (!(document.getElementById("addReviewStars") && document.getElementById("addReviewStars").value)) {
                    starsMessage.hidden = false;
                }
                if (!(document.getElementById("addReviewPrice") && document.getElementById("addReviewPrice").value)) {
                    priceMessage.hidden = false;
                }
            } else {
                createNewReview();
            }

        });

        function buildTable() {
            var jsonOfReviews;
            $.ajax({
                url: "/Reviews/ReviewsOfRestaurant/" + location.href.substr(location.href.lastIndexOf('/') + 1),
                success: function (data) {
                    jsonOfReviews = JSON.stringify(data);
                    jsonOfReviews = JSON.parse(jsonOfReviews);

                    var deleteBtns = document.getElementsByClassName('reviewDelete');
                    var editBtns = document.getElementsByClassName('reviewEdit');

                    reviewsBody.innerHTML = "";

                    var editAndDeleteHtml;
                    var editReviewHtml;
                    var deleteReviewHtml;
                    var currUserPhotoHtml = "<img height='70px' src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTKRCfg2xIu9yLGDGiAXcw56FM5zjIvvCPsfQ&usqp=CAU' /><br/>"
                    var currUserName = "";

                    function getUserName(userId, currReviewId) {
                        var currUsernameHtmlId = "currUserNameHtml";
                        $.post({
                            url: "/Reviews/GetUserName",
                            data: {
                                UserId: userId
                            }
                        }).done(function (userName) {
                            currUserName = (JSON.stringify(userName)).substr(1, (JSON.stringify(userName)).length - 2);
                            currUsernameHtmlId += currReviewId;
                            var currUsernameHtml = document.getElementById(currUsernameHtmlId);
                            currUsernameHtml.innerHTML = currUserName;
                        });
                    };

                    for (var i = 0; i < jsonOfReviews.length; i++) {
                        var currReviewId = (jsonOfReviews[i].id).toString();
                        var currReviewContent = jsonOfReviews[i].content;
                        var currReviewStars = jsonOfReviews[i].stars;
                        var currReviewPrice = jsonOfReviews[i].price;

                        var editAndDeleteHtml = "";
                        var editReviewHtml = "";
                        var deleteReviewHtml = "";

                        if ("@isManager".toString() == "True") {
                            editAndDeleteHtml =
                                "<br/><button type='submit' class='btn reviewDelete' id='reviewDelete" + currReviewId + "'><i class='material-icons'>delete</i></button>";

                            deleteReviewHtml =
                                "<div hidden class='deleteDiv' id='deleteDiv" + currReviewId + "'><br/>" +
                                "<b><span class='text-danger'>Are you sure yow want <br/> to delete this comment ? </span></b><br/>" +
                                "<input type='submit' value='Yes' class='btn yesDeleteReview'/>" +
                                " | <input type='submit' value='No' class='btn noDeleteReview'/></div>";
                        };
                        if (jsonOfReviews[i].userId == "@currentUserId") {

                            editAndDeleteHtml =
                                "<br/><button type='submit' class='btn reviewEdit' id='reviewEdit" + currReviewId + "'><i class='material-icons'>edit</i></button> | " +
                                "<button type='submit' class='btn reviewDelete' id='reviewDelete" + currReviewId + "'><i class='material-icons'>delete</i></button>";

                            editReviewHtml =
                                "<br/><div hidden class='editDiv' id='editDiv" + currReviewId + "'><h4>Edit Review</h4>" +
                                "<div><textarea class='form-control' id='editContent" + currReviewId + "' maxlength='100' value='" + currReviewContent +
                                "' style='resize: none;' rows='4'>" + currReviewContent + "</textarea ></div><br/>" +
                                "<div><select class='form-control' id='editStars" + currReviewId + "'>" +
                                "<option value=" + currReviewStars + " disabled selected> Rating (From 1 to 5): " + currReviewStars +
                                "</option><option value='5'>5 Excellent</option>" +
                                "<option value='4'>4 Above Average</option><option value='3'>3 Average</option>" +
                                "<option value='2'>2 Below Average</option><option value='1'>1 Poor</option></select></div><br/>" +
                                "<div><select class='form-control' id='editPrice" + currReviewId + "'>" +
                                "<option value=" + currReviewPrice + " disabled selected> Price (From 1 to 5): " + currReviewPrice +
                                "</option><option value='5'>5 Too Expensive</option>" +
                                "<option value='4'>4 Pretty Expensive</option><option value='3'>3 Average</option>" +
                                "<option value='2'>2 Pretty Cheap</option><option value='1'>1 Very Cheap</option></select></div><br/>" +
                                "<div><input type='submit' value='Submit Edited Review' class='btn editReview' id='editReview" + currReviewId + "'/></div></div>";

                            deleteReviewHtml =
                                "<div hidden class='deleteDiv' id='deleteDiv" + currReviewId + "'><br/>" +
                                "<b><span class='text-danger'>Are you sure yow want <br/> to delete this comment ? </span></b><br/>" +
                                "<input type='submit' value='Yes' class='btn yesDeleteReview'/>" +
                                " | <input type='submit' value='No' class='btn noDeleteReview'/></div>";
                        };

                        reviewsBody.innerHTML += "<tr><td style='text-align:center; vertical-align: middle;'>" + currUserPhotoHtml +
                            "<div id='currUserNameHtml" + currReviewId + "'> </div></td><td>" +
                            (jsonOfReviews[i].date).toString().slice(0, 10) + "<br/>" +
                            "<b>" + currReviewContent + "</b><br/>" +
                            drawStars(jsonOfReviews[i].stars) + "<br/>" + drawPrice(jsonOfReviews[i].price) + editAndDeleteHtml +
                            "</td></tr><tr hidden id='hiddenTr" + currReviewId + "'><td colspan='2'>" +
                            editReviewHtml + deleteReviewHtml + "</td></tr>";

                        getUserName((jsonOfReviews[i].userId), currReviewId);

                    };

                    $('.reviewEdit').click(function () {
                        for (var i = 0; i < editBtns.length; i++) {
                            deleteBtns[i].disabled = true;
                            editBtns[i].disabled = true;
                        };
                        currReviewId = (this.id).toString().slice(10, 14);
                        var editDivId = "editDiv" + currReviewId;
                        var editDiv = document.getElementById(editDivId);
                        editDiv.hidden = false;
                        var hiddenTrId = "hiddenTr" + currReviewId;
                        var hiddenTr = document.getElementById(hiddenTrId);
                        hiddenTr.hidden = false;

                        $('.editReview').click(function () {
                            currReviewId = (this.id).toString().slice(10, 14);
                            var editReviewContentId = "editContent" + currReviewId;
                            var editReviewContent = (document.getElementById(editReviewContentId)).value;
                            var editReviewCStarsId = "editStars" + currReviewId;
                            var editReviewCStars = ((document.getElementById(editReviewCStarsId)).value).toString();
                            var editReviewCPriceId = "editPrice" + currReviewId;
                            var editReviewCPrice = ((document.getElementById(editReviewCPriceId)).value).toString();
                            if (editReviewContent == "") {
                                for (var i = 0; i < jsonOfReviews.length; i++) {
                                    if (currReviewId == jsonOfReviews[i].id) {
                                        editReviewContent = jsonOfReviews[i].content;
                                    };
                                };
                            };

                            $.post({
                                url: "/Reviews/edit",
                                data: {
                                    Id: currReviewId,
                                    Content: editReviewContent,
                                    Stars: editReviewCStars,
                                    Price: editReviewCPrice,
                                    UserId: "@currentUserId",
                                    RestaurantId: location.href.substr(location.href.lastIndexOf('/') + 1)
                                }
                            }).done(function () {
                                editDiv.hidden = true;
                                hiddenTr.hidden = true;
                                for (var i = 0; i < editBtns.length; i++) {
                                    deleteBtns[i].disabled = false;
                                    editBtns[i].disabled = false;
                                };
                                updateRatingAndPriceLevel();
                                buildTable();
                            });
                        });
                    });

                    $('.reviewDelete').click(function () {
                        var deleteBtns = document.getElementsByClassName('reviewDelete');
                        var editBtns = document.getElementsByClassName('reviewEdit');
                        for (var i = 0; i < editBtns.length; i++) {
                            deleteBtns[i].disabled = true;
                            editBtns[i].disabled = true;
                        };
                        currReviewId = (this.id).toString().slice(12, 16);
                        var deleteDivId = "deleteDiv" + currReviewId;
                        var deleteDiv = document.getElementById(deleteDivId);
                        deleteDiv.hidden = false;
                        var hiddenTrId = "hiddenTr" + currReviewId;
                        var hiddenTr = document.getElementById(hiddenTrId);
                        hiddenTr.hidden = false;

                        $('.noDeleteReview').click(function () {
                            deleteDiv.hidden = true;
                            hiddenTr.hidden = true;
                            for (var i = 0; i < deleteBtns.length; i++) {
                                deleteBtns[i].disabled = false;
                                editBtns[i].disabled = false;
                            };
                        });

                        $('.yesDeleteReview').click(function () {
                            $.post({
                                url: "/Reviews/Delete",
                                data: {
                                    id: currReviewId
                                }
                            }).done(function () {
                                deleteDiv.hidden = true;
                                hiddenTr.hidden = true;
                                updateRatingAndPriceLevel();
                                buildTable();
                            });
                        });

                    });
                }
            });
        };
        buildTable();

    });
</script>
